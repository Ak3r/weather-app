{"version":3,"sources":["actionTypes.js","store.js","reducer.js","components/SeachBar.js","components/City.js","components/CitiesList.js","App.js","index.js"],"names":["REMOVE_CITY","UPDATE_CITY","store","createStore","state","action","type","actions","filter","city","id","console","log","SeachBar","props","useState","cityName","setCityName","className","value","onChange","e","target","placeholder","onClick","preventDefault","onSubmit","City","weather","name","main","src","icon","alt","description","Math","round","temp","feels_like","humidity","remove","update","CitiesList","cities","map","App","setCities","fetch","then","response","json","data","concat","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8PAAaA,EAAc,aACdC,EAAc,aCE3B,IAEeC,EAFDC,aCDC,WAAsC,IAArBC,EAAoB,uDAAZ,GAAIC,EAAQ,uCAChD,OAAOA,EAAOC,MACV,KAAKC,EACD,OAAOH,EAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAON,EAAMM,MAClD,KAAKH,EACD,OAAOI,QAAQC,IAAI,eACvB,QACI,OAAOR,M,uBC0BJS,G,MAhCE,SAACC,GAAW,IAAD,EACQC,mBAAS,IADjB,mBACjBC,EADiB,KACPC,EADO,KAUxB,OACI,qBAAKC,UAAU,UAAf,SACI,uBAAMA,UAAU,UAAhB,UACI,sBAAKA,UAAU,QAAf,UACI,gDACA,uBACIZ,KAAK,OACLa,MAAOH,EACPI,SAAU,SAAAC,GAAOJ,EAAYI,EAAEC,OAAOH,QACtCI,YAAY,wBAEpB,wBACIC,QAnBK,SAAAH,GACjBA,EAAEI,iBAEFX,EAAMY,SAASV,GACfC,EAAY,KAgBAC,UAAU,YAFd,6BCQDS,G,MA7BF,SAACb,GAAW,IAAD,EACcA,EAAMc,QAAjCC,EADa,EACbA,KAAMD,EADO,EACPA,QAASE,EADF,EACEA,KAAMpB,EADR,EACQA,GAU5B,OACI,sBAAKQ,UAAU,YAAf,UACI,oBAAIA,UAAU,QAAd,SAAuBW,IACvB,qBACIE,IAAG,2CAAsCH,EAAQ,GAAGI,KAAjD,WACHC,IAAKL,EAAQ,GAAGM,cAEpB,oBAAIhB,UAAU,OAAd,SAAsBU,EAAQ,GAAGE,OACjC,8CAAiBK,KAAKC,MAAMN,EAAKO,KAAO,QAAxC,QACA,6CAAgBF,KAAKC,MAAMN,EAAKQ,WAAa,QAA7C,QACA,2CAAcR,EAAKS,SAAnB,QACA,wBAAQf,QAnBG,WACfV,EAAM0B,OAAO9B,IAkBT,oBACA,uBACA,wBAAQc,QAjBG,WACfV,EAAM2B,OAAO/B,IAgBT,yBCfGgC,G,MARI,SAAC5B,GAChB,IAAI6B,EAAS7B,EAAM6B,OAAOC,KAAI,SAACnC,GAC3B,OAAO,cAAC,EAAD,CAAoBmB,QAASnB,EAAM+B,OAAQ1B,EAAM0B,OAAQC,OAAQ3B,EAAM2B,QAA5DhC,EAAKC,OAG3B,OAAO,qBAAKQ,UAAU,cAAf,SAA8ByB,MC2B1BE,EA/BH,WAAO,IAAD,EACc9B,mBAAS,IADvB,mBACP4B,EADO,KACCG,EADD,KAuBd,OACI,gCACI,cAAC,EAAD,CAAUpB,SAtBK,SAACV,GACpB,GAAiB,KAAbA,EAEG,CAGH,OAAO+B,MAAM,qDAAD,OAAsD/B,EAAtD,kBAFE,qCAGTgC,MAAK,SAAAC,GAAa,OAAOA,EAASC,UAC9BF,MAAK,SAAAG,GAAI,OAAIL,EAAUH,EAAOS,OAAOD,OAN9CE,MAAM,wBAqBN,cAAC,EAAD,CAAYV,OAAQA,EAAQH,OAXjB,SAAC9B,GAChB,OAAOoC,EAAUH,EAAOnC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,KAAOA,OAUC+B,OAPrC,SAAC/B,GAChBC,QAAQC,IAAR,0BAA+BF,WChBvC4C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUtD,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJuD,SAASC,eAAe,W","file":"static/js/main.4cab4e3d.chunk.js","sourcesContent":["export const REMOVE_CITY = 'removeCity'\nexport const UPDATE_CITY = 'updateCity'","import {createStore} from 'redux'\nimport reducer from './reducer'\n\nconst store = createStore(reducer)\n\nexport default store","import * as actions from './actionTypes'\n\nexport default function reducer(state = [], action) {\n    switch(action.type) {\n        case actions.REMOVE_CITY: \n            return state.filter(city => city.id !== state.id)\n        case actions.UPDATE_CITY: \n            return console.log('update city')\n        default:\n            return state\n    }\n}","import React, {useState} from 'react'\nimport './SeachBar.css'\n\nconst SeachBar = (props) => {\n    const [cityName, setCityName] = useState('')\n\n    const onFormSubmit = e => {\n        e.preventDefault()\n\n        props.onSubmit(cityName)\n        setCityName('')\n    }\n\n    return (\n        <div className='wrapper'>\n            <form className='ui form' >\n                <div className='field'>\n                    <label>City Search</label>\n                    <input \n                        type='text' \n                        value={cityName} \n                        onChange={e => { setCityName(e.target.value) }}\n                        placeholder='Type a city name'/>\n                </div>\n                <button \n                    onClick={onFormSubmit}\n                    className=\"ui button\"\n                >\n                    Add City\n                </button>\n            </form>\n        </div>\n    )\n}\n\nexport default SeachBar","import React from 'react'\nimport './City.css'\n\nconst City = (props) => {\n    const {name, weather, main, id} = props.weather\n\n    const removeCity = () => {\n        props.remove(id)\n    }\n\n    const updateCity = () => {\n        props.update(id)\n    }\n\n    return(\n        <div className='city-card'>\n            <h3 className='title'>{name}</h3>\n            <img \n                src={`http://openweathermap.org/img/wn/${weather[0].icon}@2x.png`} \n                alt={weather[0].description} \n            />\n            <h4 className='main'>{weather[0].main}</h4>\n            <p>Temperature: {Math.round(main.temp - 273.15)} C</p>\n            <p>Feels like: {Math.round(main.feels_like - 273.15)} C</p>\n            <p>Humidity: {main.humidity} %</p>\n            <button onClick={removeCity}>Delete</button>\n            <br/>\n            <button onClick={updateCity}>Update</button>\n        </div>\n    )\n}\n\nexport default City","import React from 'react'\nimport City from './City'\nimport './CitiesList.css'\n\nconst CitiesList = (props) => {\n    let cities = props.cities.map((city) => {\n        return <City key={city.id} weather={city} remove={props.remove} update={props.update}/>\n    })\n\n    return <div className='cities-list'>{cities}</div>\n}\n\nexport default CitiesList","import React, {useState} from 'react'\n\nimport SeachBar from './components/SeachBar'\nimport CitiesList from './components/CitiesList'\n\nconst App = () => {  \n    const [cities, setCities] = useState([])\n    \n    const getWeatherData = (cityName) => {\n        if (cityName === '') {            \n            alert('Type a city name.')                  \n        } else {\n            const appid = 'ad58cc0e85fab249d801a3196b2a3390'\n            \n            return fetch(`https://api.openweathermap.org/data/2.5/weather?q=${cityName}&appid=${appid}`)\n                .then(response => {return response.json()})\n                    .then(data => setCities(cities.concat(data)))\n        }\n    }    \n\n    const removeCity = (id) => {\n        return setCities(cities.filter(city => city.id !== id))\n    }\n\n    const updateCity = (id) => {\n        console.log(`update city id: ${id}`)\n    }\n\n    return(\n        <div>\n            <SeachBar onSubmit={getWeatherData}/>\n            <CitiesList cities={cities} remove={removeCity} update={updateCity}/>\n        </div>\n    )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport store from './store'\nimport { Provider } from 'react-redux'\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}